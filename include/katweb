#ifndef __KATWEB
#define __KATWEB 45785
#include<map>
#include<iostream>
#include <functional>
using namespace std;
namespace kat_web
{
typedef struct KW_Request
{
char *method;
char *resource;
char isClientSideTechnologyResource;
char *mimeType;
int isKST;
int isForwarded;
int dataCount;
char **data;
}REQUEST;	

class Request;
class Response;
class Katlina
{
private : 
int portNumber;
map<string,function<void(Request &,Response &)>> mappings;
friend class Request;
public : 
Katlina(int);
void start();
void onRequest(string,std::function<void(Request &,Response &)>);
};
class Request 
{
private : 
map<string,int> intData;
map<string,string> queryKeyValuePairs;
map<string,string> strData;
int clientSocketDescriptor;
REQUEST *request;
friend class Katlina;
Katlina kat;
string forwardedToResource;
void _forward();
public : 
Request(REQUEST *request,int clientSocketDescriptor,Katlina &kat) : request(request),clientSocketDescriptor(clientSocketDescriptor),kat(kat),forwardedToResource(""){};
string getMethodType();
string getResource();
void loadQueryString(int,char **);
string get(string);
void setInt(string,int);
int getInt(string);
void forward(string);
int isForwarded();
void setValue(string key,string value);
string getValue(string key);
};
class Response 
{
private : 
bool headerSent;
int clientSocketDescriptor;
public : 
Response(int clientSocketDescriptor):headerSent(false),clientSocketDescriptor(clientSocketDescriptor){};
void write(string data);
void close();
};
}
#endif